# docker-compose.yml - Updated version
version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: sipstr_rw_user
      POSTGRES_PASSWORD: sipstr_rw_user
      POSTGRES_DB: sipStr
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "sipstr_rw_user"]
      interval: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - backend

  # service-registry:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: service-registry/Dockerfile
  #   container_name: service-registry
  #   ports:
  #     - "8761:8761"
  #   networks:
  #     - backend
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 40s
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker

  # auth-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: auth-service/Dockerfile
  #   container_name: auth-service
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8081
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # user-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: user-service/Dockerfile
  #   container_name: user-service
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8082
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # payment-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: payment-service/Dockerfile
  #   container_name: payment-service
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8083
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # order-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: order-service/Dockerfile
  #   container_name: order-service
  #   ports:
  #     - "8084:8084"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8084
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # delivery-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: delivery-service/Dockerfile
  #   container_name: delivery-service
  #   ports:
  #     - "8085:8085"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8085
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # driver-location-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: driver-location-service/Dockerfile
  #   container_name: driver-location-service
  #   ports:
  #     - "8086:8086"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8086
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # notification-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: notification-service/Dockerfile
  #   container_name: notification-service
  #   ports:
  #     - "8087:8087"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8087
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

  # search-service:
  #   build:
  #     context: ./sipstr-backend
  #     dockerfile: search-service/Dockerfile
  #   container_name: search-service
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sipStr
  #     - SPRING_DATASOURCE_USERNAME=sipstr_rw_user
  #     - SPRING_DATASOURCE_PASSWORD=sipstr_rw_user
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
  #     - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_REDIS_PORT=6379
  #     - SERVER_PORT=8088
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     service-registry:
  #       condition: service_healthy
  #   networks:
  #     - backend

volumes:
  postgres_data: {}

networks:
  backend:
    driver: bridge